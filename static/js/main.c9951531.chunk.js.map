{"version":3,"sources":["components/TOC.tsx","components/ReadContent.tsx","components/CreateContent.tsx","components/UpdateContent.tsx","components/Subject.tsx","components/Control.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TOC","console","log","lists","data","this","props","i","length","push","href","id","data-id","onClick","e","preventDefault","onChangePage","target","dataset","bind","title","Component","ReadContent","desc","CreateContent","action","method","onSubmit","value","type","name","placeholder","UpdateContent","state","inputFormHandler","setState","onChange","Subject","sub","Control","onChangeMode","App","max_content_id","mode","selected_content_id","subject","welcome","contents","_title","_desc","_article","_content","getReadContent","_contents","Array","from","_id","className","Number","_mode","window","confirm","splice","alert","getContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c9951531.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component<{data:Array<any>,onChangePage:Function}>{\n    render(){\n        console.log('TOC render');\n        var lists = [];\n        var data = this.props.data;\n        var i = 0;\n        while(i < data.length){\n            lists.push(\n                <li key={data[i].id}>\n                  <a \n                    href={\"/content/\"+data[i].id}\n                    data-id={data[i].id}\n                    onClick={function(this:any,e:any){\n                      e.preventDefault();\n                      this.props.onChangePage(e.target.dataset.id);\n                    }.bind(this)}\n                  >{data[i].title}</a>\n                </li>);\n            i = i + 1;\n        }\n      return (\n        <nav>\n            <ul>\n                {lists}\n            </ul>\n        </nav>\n      );\n    }\n  }\n\nexport default TOC;","import React, { Component } from 'react';\n\nclass ReadContent extends Component<{title:string,desc:string}>{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n            <h2>{this.props.title}</h2>\n            {this.props.desc}\n        </article>\n      );\n    }\n  }\n\nexport default ReadContent; ","import React, { Component } from 'react';\n\nclass CreateContent extends Component<{onSubmit:Function}>{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n            <h2>Create</h2>\n            <form action=\"/create_process\" method=\"post\"\n              onSubmit={function(this:any,e:any){\n                e.preventDefault();\n                this.props.onSubmit(\n                    e.target.title.value,\n                    e.target.desc.value\n                  );\n              }.bind(this)}\n            >\n              <p><input type=\"text\" name=\"title\" placeholder=\"title\"></input></p>\n              <p>\n                <textarea name=\"desc\" placeholder=\"description\"></textarea>\n              </p>\n              <p>\n                <input type=\"submit\"></input>\n              </p>\n            </form>\n        </article>\n      );\n    }\n  }\n\nexport default CreateContent;","import React, { Component } from 'react';\n\nclass UpdateContent extends Component<{data:any, onSubmit:Function},{title:string,desc:string,id:string}>{\n    constructor(props:any){\n        super(props);\n        this.state = {\n          id:this.props.data.id,\n          title:this.props.data.title,\n          desc:this.props.data.desc\n        }\n        this.inputFormHandler = this.inputFormHandler.bind(this);\n      }\n      inputFormHandler(e: { target: { name: any; value: any; }; }) {\n        this.setState({ [e.target.name]: e.target.value } as Pick<{title:string,desc:string}, keyof {title:string,desc:string}>);\n      }\n    render(){\n      console.log(this.props.data);\n      console.log('UpdateContent render');\n      return (\n        <article>\n            <h2>Update</h2>\n            <form action=\"/create_process\" method=\"post\"\n              onSubmit={function(this:any,e:React.FormEvent){\n                e.preventDefault();\n                this.props.onSubmit(\n                    this.state.id,\n                    this.state.title,\n                    this.state.desc\n                );\n              }.bind(this)}\n            >\n              <input type=\"hidden\" name=\"id\" value={this.state.id}></input>\n              <p>\n              <input \n                  type=\"text\" \n                  name=\"title\" \n                  placeholder=\"title\"\n                  value={this.state.title}\n                  onChange={this.inputFormHandler}\n                ></input>\n                </p>\n              <p>\n                <textarea \n                  onChange={this.inputFormHandler} \n                  name=\"desc\" \n                  placeholder=\"description\" \n                  value={this.state.desc}></textarea>\n              </p>\n              <p>\n                <input type=\"submit\"></input>\n              </p>\n            </form>\n        </article>\n      );\n    }\n  }\n\nexport default UpdateContent;","import React, { Component } from 'react';\nclass Subject extends Component<{title:string,sub:string,onChangePage:Function}>{\n    render(){\n      console.log('Subject render');\n      return (\n        <header>\n            <h1><a href=\"/\" onClick={function(this:any,e:React.MouseEvent){\n              e.preventDefault();\n              this.props.onChangePage();\n            }.bind(this)}>{this.props.title}</a></h1>\n            {this.props.sub}\n        </header>  \n      );\n    }\n  }\n\nexport default Subject;","import React, { Component } from 'react';\nclass Control extends Component<{onChangeMode:Function}> {\n    render(){\n      console.log('Subject render');\n      return (\n        <ul>\n          <li><a href=\"/create\" onClick={function(this:any,e:React.MouseEvent){\n            e.preventDefault();\n            this.props.onChangeMode('create');\n          }.bind(this)}>create</a></li>\n          <li><a href=\"/update\" onClick={function(this:any,e:React.MouseEvent){\n            e.preventDefault();\n            this.props.onChangeMode('update');\n          }.bind(this)}>update</a></li>\n          <li><input  onClick={function(this:any,e:React.MouseEvent){\n            e.preventDefault();\n            this.props.onChangeMode('delete');\n          }.bind(this)} type=\"button\" value=\"delete\"></input></li>\n        </ul>\n      );\n    }\n  }\n\nexport default Control; ","import React, { Component } from 'react';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\"\nimport UpdateContent from \"./components/UpdateContent\"\nimport Subject from \"./components/Subject\"\nimport Control from \"./components/Control\"\nimport './App.css';\n\n\nclass App extends Component<{},{subject:any, contents:Array<any>, mode:string, welcome:any, selected_content_id:number}> {\n  max_content_id:number;\n  constructor(props:JSX.Element){\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:'welcome',\n      selected_content_id:2,\n      subject:{title:'WEB', sub:'World Wide Web!'},\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is for information'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent(){\n    var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id) {\n          return data;\n        }\n        i = i + 1;\n      }\n    }\n    getContent(){\n      var _title, _desc, _article = null;\n      if(this.state.mode ===  'welcome'){\n        _title = this.state.welcome.title;\n        _desc = this.state.welcome.desc;\n        _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n      } else if(this.state.mode === 'read'){\n        var _content = this.getReadContent();\n        _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n      } else  if(this.state.mode === 'create'){\n      _article = <CreateContent onSubmit={function(this:any,_title:string, _desc:string){\n        this.max_content_id = this.max_content_id+1;\n        var _contents = Array.from(this.state.contents);\n        _contents.push({id:this.max_content_id, title:_title, desc:_desc});\n        this.setState({\n          contents:_contents,\n          mode:'read',\n          selected_content_id:this.max_content_id\n        });\n      }.bind(this)}></CreateContent>\n      } else  if(this.state.mode === 'update'){\n        _content = this.getReadContent();\n        _article = <UpdateContent data={_content} onSubmit={\n          function(this:any, _id:string, _title:string, _desc:string){\n            var _contents:Array<any> = Array.from(this.state.contents);\n            var i = 0;\n            while(i < _contents.length){\n              if(_contents[i].id === _id) {\n                _contents[i] = {id:_id, title:_title, desc:_desc};\n                break;\n              }\n              i = i + 1;\n            }\n            this.setState({\n              contents:_contents,\n              mode:'read'\n            });\n          }.bind(this)}></UpdateContent>\n    }\n    return _article;\n  }\n  render() {\n    console.log('App render');\n    return (\n    <div className=\"App\">\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          onChangePage={function(this:any){\n            this.setState({mode:'welcome'});\n          }.bind(this)}\n        >\n        </Subject>\n        <TOC \n          onChangePage={function(this:any,id:string){\n            this.setState({\n              mode:'read',\n              selected_content_id:Number(id)\n            });\n          }.bind(this)} \n          data={this.state.contents}\n        ></TOC>\n        <Control onChangeMode={function(this:any,_mode:string){\n          if(_mode === 'delete'){\n            if(window.confirm('really?')){\n              var _contents:Array<any> = Array.from(this.state.contents);\n              var i = 0;\n              while(i < _contents.length){\n                if(_contents[i].id === this.state.selected_content_id){\n                  _contents.splice(i,1);\n                  break;\n                }\n                i = i + 1;\n              }\n              this.setState({\n                mode:'welcome',\n                contents:_contents\n              });\n              alert('deleted!');\n            }\n          } else {\n            this.setState({\n              mode:_mode\n            });\n          }\n\n        }.bind(this)}></Control>\n        {this.getContent()}\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}